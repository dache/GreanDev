<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>